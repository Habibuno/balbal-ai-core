import React, { useState } from 'react';
import { View, Text, StyleSheet, TouchableOpacity, FlatList, TextInput, Alert } from 'react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';

const Stack = createStackNavigator();

const HomeScreen = ({ navigation }) => {
  return (
    <View style={styles.container}>
      <Text style={styles.logo}>balbal.io Love</Text>
      <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Auth')}> 
        <Text style={styles.buttonText}>Commencer</Text>
      </TouchableOpacity>
    </View>
  );
};

const AuthScreen = ({ navigation }) => {
  return (
    <View style={styles.container}>
      <Text style={styles.title}>Connexion / Inscription</Text>
      <TextInput style={styles.input} placeholder="Nom" />
      <TextInput style={styles.input} placeholder="Âge" keyboardType='numeric' />
      <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Profile')}> 
        <Text style={styles.buttonText}>Se connecter</Text>
      </TouchableOpacity>
    </View>
  );
};

const ProfileScreen = () => {
  const [user] = useState({ name: 'John Doe', age: 28, bio: 'A short bio...', profilePic: 'https://via.placeholder.com/100' });
  return (
    <View style={styles.container}>
      <Text style={styles.profileName}>{user.name}</Text>
      <Text style={styles.profileAge}>{user.age} ans</Text>
      <Text style={styles.profileBio}>{user.bio}</Text>
    </View>
  );
};

const DiscoveryScreen = ({ navigation }) => {
  const [profiles] = useState([
    { id: '1', name: 'Alice', age: 24, bio: 'Loves hiking', liked: false },
    { id: '2', name: 'Bob', age: 30, bio: 'Enjoys cooking', liked: false }
  ]);

  const handleLike = (id) => {
    const updatedProfiles = profiles.map(profile => 
      profile.id === id ? { ...profile, liked: true } : profile
    );
    Alert.alert('Vous avez aimé ' + updatedProfiles.find(p => p.id === id).name);
  };

  const handlePass = (id) => {
    Alert.alert('Vous avez passé sur ' + profiles.find(p => p.id === id).name);
  };

  return (
    <FlatList
      data={profiles}
      keyExtractor={(item) => item.id}
      renderItem={({ item }) => (
        <View style={styles.profileCard}>
          <Text style={styles.profileName}>{item.name}</Text>
          <Text>{item.age} ans</Text>
          <Text>{item.bio}</Text>
          <View style={styles.buttonContainer}>
            <TouchableOpacity style={styles.likeButton} onPress={() => handleLike(item.id)}>
              <Text style={styles.buttonText}>Like</Text>
            </TouchableOpacity>
            <TouchableOpacity style={styles.passButton} onPress={() => handlePass(item.id)}>
              <Text style={styles.buttonText}>Passer</Text>
            </TouchableOpacity>
          </View>
        </View>
      )}
    />
  );
};

const MatchScreen = () => {
  return (
    <View style={styles.container}>
      <Text style={styles.matchText}>C'est un match !</Text>
    </View>
  );
};

const ChatScreen = () => {
  const [messages, setMessages] = useState([]);
  const [message, setMessage] = useState('');

  const handleSend = () => {
    setMessages([...messages, message]);
    setMessage('');
  };

  return (
    <View style={styles.container}>
      <FlatList
        data={messages}
        renderItem={({ item }) => <Text style={styles.chatMessage}>{item}</Text>}
        keyExtractor={(item, index) => index.toString()}
      />
      <TextInput
        style={styles.chatInput}
        value={message}
        onChangeText={setMessage}
        placeholder="Tapez votre message..."
      />
      <TouchableOpacity style={styles.sendButton} onPress={handleSend}>
        <Text style={styles.buttonText}>Envoyer</Text>
      </TouchableOpacity>
    </View>
  );
};

export default function App() {
  return (
    <NavigationContainer>
      <Stack.Navigator>
        <Stack.Screen name="Home" component={HomeScreen} options={{ headerShown: false }} />
        <Stack.Screen name="Auth" component={AuthScreen} />
        <Stack.Screen name="Profile" component={ProfileScreen} />
        <Stack.Screen name="Discovery" component={DiscoveryScreen} />
        <Stack.Screen name="Match" component={MatchScreen} />
        <Stack.Screen name="Chat" component={ChatScreen} />
      </Stack.Navigator>
    </NavigationContainer>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    padding: 20,
    backgroundColor: '#fff',
  },
  logo: {
    fontSize: 32,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  title: {
    fontSize: 24,
    marginBottom: 20,
  },
  button: {
    backgroundColor: '#007BFF',
    padding: 15,
    borderRadius: 5,
    width: '100%',
    alignItems: 'center',
  },
  buttonText: {
    color: '#fff',
    fontSize: 18,
  },
  input: {
    height: 40,
    borderColor: '#ccc',
    borderWidth: 1,
    marginBottom: 15,
    padding: 10,
    width: '100%',
  },
  profileCard: {
    padding: 20,
    borderWidth: 1,
    borderColor: '#ddd',
    borderRadius: 10,
    marginVertical: 10,
  },
  profileName: {
    fontSize: 20,
    fontWeight: 'bold',
  },
  profileAge: {
    fontSize: 16,
    color: '#666',
  },
  profileBio: {
    fontSize: 14,
    marginVertical: 10,
  },
  buttonContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
  },
  likeButton: {
    backgroundColor: '#28a745',
    padding: 10,
    borderRadius: 5,
  },
  passButton: {
    backgroundColor: '#dc3545',
    padding: 10,
    borderRadius: 5,
  },
  matchText: {
    fontSize: 28,
    fontWeight: 'bold',
    color: '#ff4081',
  },
  chatMessage: {
    padding: 10,
    backgroundColor: '#f1f1f1',
    marginVertical: 5,
    borderRadius: 5,
  },
  chatInput: {
    height: 40,
    borderColor: '#ccc',
    borderWidth: 1,
    padding: 10,
    width: '80%',
    marginBottom: 10,
  },
  sendButton: {
    backgroundColor: '#007BFF',
    padding: 10,
    borderRadius: 5,
  },
});